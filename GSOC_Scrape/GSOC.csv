Company,Link,Description
52°North Initiative for Geospatial Open Source Software GmbH,https://52north.org/,"52°North works on innovative ideas and technologies in geoinformatics
52°North is an international research and development partner network with partners from academia, the public sector and industry. Our goal is to foster innovation in the field of geoinformatics by organizing and facilitating a collaborative software development process. The topics we address comprise for example sensor web technologies, the web of things, linked open data, spatial data infrastructures, citizen science, earth observation, and 3D. This selection of topics reflects both the strengths and strategies of the partners involved. Some of our software projects are enviroCar, 52°North SOS, 52°North JavaScript Sensor Web Client, ILWIS, and 52°North WPS. Check out our GitHub organization and our Ohloh page to learn more about the wide range of software our communities work on: from mobile apps to standardized web services, from cutting edge research to established products. 52°North open source projects are used in a broad range of domains (e.g. oceanology, air quality, hydrology, traffic planning) and operational as well as research projects (e.g. European Horizon 2020 projects such as NeXOS, FixO3, WaterInnEU, ODIP II). All of the 52°North software is published under an OSI approved open source license. 52°North GmbH, which is the legal body and service center of the network, acts as a non-profit organization. This means that the shareholders of 52°North do not receive profit shares or payments from company funds. Instead, the profits earned by 52°North are completely re-invested into the innovation and software development process."
AboutCode.org,https://aboutcode.org,"Find the origin and license of code
Open Source for Open Source
AboutCode is a set of open source tools to discover and manage important information about your software. Our primary focus is to solve the problem of discovering, identifying, tracking and managing open source and third-party components used in your products, applications and systems. The AboutCode tools are designed to be modular so that a software development team can quickly implement a workflow tailored for its set of languages, technologies and tools."
AerospaceResearch.net,http://www.aerospaceresearch.net,"making space together
We are AerospaceResearch.net, a small team of space makers solving space problems together with the Small Satellite Student Society University of Stuttgart (KSat e.V.) and the ep2lab of Charles III University of Madrid.
In 2011, we started as a student group at the University of Stuttgart to provide massive computing power with our distributed computting platform Constellation to everyone needing it for space simulations. Over time, we attracted international young professionals of the space industry and the local maker community and thus becoming a full fletched citizen science project.
We are a community of several different Teams in Stuttgart and globally working together on space projects. Together with KSat e.V. (the Small Satellite Student Society) from the University of Stuttgart and the Distributed Ground Station Network Team at the Institute for Photogrammetry we are working on the rover mission ROACH crawling for maintenance reasons on the outer hull of a sounding rocket while coasting in near space or tracking cubesats faster than US NORAD. With the Cosmic Dust Team of the Institute for Space Systems at University of Stuttgart we are simulating cometary dust particles for the IMEX project of the European Space Agency (ESA). And now with our newest umbrella team, the ep2lab of Charles III University of Madrid, we are also involved in simulating and building propulsion systems for space applications.
We are a small organization but having impact within our space community by helping realizing space exploration by creativity and open access. We are open for everybody interested in space for the betterment of everybody. We believe everyone can be involved in space and making space together!"
aimacode,https://github.com/aimacode,"Code for the book ""Artificial Intelligence: A Modern Approach""
Python, Java, and Javascript code for the book ""Artificial Intelligence: A Modern Approach."" Includes implementations of all the algorithms in the book, now switching over to the upcoming 4th edition. Also includes tutorial examples of usage of the algorithms."
Amahi,https://www.amahi.org,"Making Home Networking and Storage Simple
The Amahi Linux Home Server makes your home networking and storage simple. We like to call the Amahi servers HDAs, for ""Home Digital Assistants."" Each HDA delivers all the functionality you would want in a home server, while being easy to use from a web browser and mobile apps.
Amahi can turn popular Linux distributions into a simple to use networking, storage and app server. The server management is done through a friendly user interface (the ""platform”). The platform allows controlling users login and storage access permissions, managing some network services like DHCP and DNS, as well as providing many apps that the users can install. The platform web interface is implemented in Ruby on Rails and runs in the web server along with other apps.
The installation process is done by installing the base distribution (Fedora at the moment) and after that, running the Amahi installer at the command line.
Once the installation is complete, the network services kick in, storage can be used and applications are installed by users. Some applications are Plugins (developed as an RoR ""engine"") and some are very popular open source apps and services."
Android Graphics Tools Team,https://github.com/google/graphicsfuzz,"Providing excellent tools for graphics developers and driver makers
Graphics programming is challenging, as is writing fast and reliable graphics drivers.
The Android Graphics Tools team is building and maintaining a suite of tools to help driver makers build fast and reliable drivers - including fuzzing tools to help find bugs early, bug capture and triage tools to help diagnose and fix problems that arise in the wild, and performance analysis tools to help get a handle on bottlenecks.
The team is also focusing on tools to help game developers get to grips with the difficulty of programming modern graphics stacks in Vulkan and OpenGL ES, including debugging and profiling tools.
In addition, a goal of the team is to deliver tools that make it easier for game developers to communicate driver bugs and performance problems to driver makers, via small reproducible tests that can be added to regression test suites. The aim here is to avoid the situation today where game developers tolerate and work around driver bugs, due to the difficulty of identifying the root cause of a problem and isolating a stand-alone repro test."
AOSSIE - Australian Open Source Software Innovation and Education,http://aossie.org/,"Australian Umbrella Org for Open-Source Projects
We are an Australian not-for-profit umbrella organization for open-source projects. We believe the open-source philosophy provides a resource-efficient channel to transfer knowledge and achieve innovation and education.
In 2019, we offer the following projects:
Agora: An electronic voting library.
Agora-Web: An online portal for democratic elections.
Computational Philosophy: Formalization of philosophical theories and arguments towards computer-assisted metaphysics.
Carbon Assistant: Provides conversational access to the CarbonFootprint API.
CarbonFootprint: A browser extension to track the C02 emissions.
CarbonFootprint API: A universal API to find the C02 emissions.
CarbonFootprint-Mobile: A cross-platform app to monitor and track their C02 emissions.
CrowdAlert: Platform to report and view the incidents around the globe.
Mind the Word: A browser extension that helps users to learn new languages.
Scavenger: An automated theorem prover for first-order logic.
Social Street Smart: An extension that makes the Internet a more productive.
Starcross: Starcross Android App brings the facility of Night Sky Gazing.
We have a diverse group of mentors, including GSoC students from previous years who decided to become long-term contributors as well as academics with extensive experience in supervising undergraduate, M.Sc. and Ph.D. students on theses and projects, whose results are often published and presented in the most prestigious conferences of our research fields.
We are looking for excellent students of any level (undergraduate, M.Sc., or Ph.D.), who are interested in becoming long-term collaborators in our projects and in joining the open-source approach to software development. We will evaluate student applications solely on the basis of programming skills, academic merit and the feasibility of the proposals.
If you are a prospective student interested in doing your Google Summer of Code (GSoC) project with us, please follow the instructions on our website."
Apertium,http://wiki.apertium.org,"A free/open-source machine translation platform
Apertium is a shallow-transfer machine translation system, which uses finite state transducers for all of its lexical transformations, and hidden Markov models and/or constraint grammars for part-of-speech tagging or word category disambiguation.
Existing machine translation systems available at present are mostly commercial, use proprietary technologies, which makes them very hard to adapt to new usages; furthermore, they use different technologies across language pairs, which makes it very difficult, for instance, to integrate them in a single multilingual content management system. Finally, most of them are not available for most of the languages in the world, as they rely heavily on resources that are not available for them.
Apertium uses a language-independent specification, to allow for the ease of contributing to Apertium, more efficient development, and enhancing the project's overall growth.
At present, Apertium has released more than 40 stable language pairs, delivering fast translation with reasonably intelligible results. Being an open-source project, Apertium provides tools for potential developers to build their own language pair and contribute to the project."
apertus° Association,http://www.apertus.org,"open technology for professional film production
The goal of the award winning apertus° project is to create free and open technology for todays professional cinema and film production landscape and make all the generated knowledge freely available. It all started with creating an open modular camera system consisting of several hardware and software parts using Elphel hardware. Now with the efforts to build the very first open digital cinema camera AXIOM from scratch the apertus° project has evolved to the next level: into a platform for film-makers, creative industry professionals, artists and enthusiasts. apertus° is more than just a software/hardware collection, it's a knowledge library, an ecosystem of people supporting each other and advocating freedom."
API Client Tools at Google,https://googleapis.github.io,"Industry-leading user experiences for networked APIs.
As much as we'd like, we can't provide every developer using every language with the kind of shrink-wrapped experience that we'd like! So we work with standard API formats and have standardized our own practices to make it easier for contributors anywhere to make great API consumption experiences for users of any idiom in any language. We're especially interested in supporting projects that build on the Protocol Buffers and OpenAPI description formats."
appleseedhq,https://appleseedhq.net/,"A modern open source rendering engine for animation and visual effects
Overview
appleseed is an open source, physically-based global illumination rendering engine primarily designed for animation and visual effects.
appleseed is actively developed by a small, international team of talented volunteers from the animation and VFX industry. Its core mission is to provide individuals and small studios with a complete, reliable, fully open rendering package.
Over the years appleseed has been used on several projects including TV documentaries, ads, promotional videos and an animation short.
Paradigm
appleseed implements a modern workflow based on path tracing that enables artifact-free, single pass rendering with very little technical tuning. It is simultaneously capable of strictly unbiased rendering when total accuracy matters, and biased rendering when artistic freedom and shorter rendering time are paramount.
Features
appleseed supports fully programmable shading via Sony Pictures Imageworks' Open Shading Language (OSL), RGB/spectral/mixed rendering, fast and robust transformation and deformation motion blur, state-of-the-art ray traced subsurface scattering, exhaustive Python and C++ APIs and many other production-oriented features.
Ecosystem
Along with the core renderer, the team is actively developing high quality integrations into Autodesk Maya and Autodesk 3ds Max. appleseed is also the default rendering engine of Image Engine’s Gaffer.
Timeline
appleseed was founded in May 2009 by François Beaune, a former rendering engineer from the core R&D team at mental images (now NVIDIA).
In October 2011, the development of appleseed benefited from a technology sharing agreement with Jupiter Jazz Limited and received funding for one year. Since October 2012, appleseed relies on the continued effort of talented volunteers."
Ardupilot.org,http://ardupilot.org,"The worlds most advanced open source autopilot
ArduPilot is the most advanced, full-featured and reliable open source autopilot software available. It is the only autopilot software capable of controlling any vehicle system imaginable, from conventional airplanes, multirotors, and helicopters, to rovers and boats and even submarines. Most recently it has been expanded to support new emerging vehicle types including quad-planes, compound helicopters, tilt-rotors and tilt wings VTOLs.
ArduPilot runs natively on a wide variety of hardware platforms from the very popular Pixhawk flight controller (32bit ARM) to the advanced Intel Aero linux flight controller (see full list here: http://ardupilot.org/copter/docs/common-autopilots.html).
The ArduPilot team is lead by an experienced group of passionate and world class developers from all over the world with expertise in Extended Kalman Filters, control theory, embedded programming, Linux and much more.
A welcoming and friendly group of developers that is happy to share their knowledge with you but also with too many interesting projects to complete on their own. An engaged group of partner companies provides the hardware and financial support for the group. They could use your help!"
Bazel,https://bazel.build/,"Build and test software of any size, quickly and reliably
Bazel is the build tool behind Google's own builds, publicly available on GitHub since 2015. Bazel is a multi-language and multi-platform build tool that runs Linux, macOS, and Windows, and has built-in support for C++, Java, Android, iOS, and more. Bazel provides a simple but powerful extension model that you can use to develop your own build and test rules."
BeagleBoard.org,https://beagleboard.org,"Open hardware computing from kindergarten to kickstarter
BeagleBoard.org is an open source community of experienced hackers, hobbyists and engineers who are enthusiastic about building powerful, open ARM-based systems completely programmable through your web browser. BeagleBoard.org’s vision is to improve access to small, low-power computing platforms that can be embedded into new creations using easy to use development tools, such as its self-hosted, web-based IDE. The hardware designs of all Beagle boards are open source with all schematics, bills-of-materials, layouts, etc. shared for building other devices. The software is also open source and is generated by the community. Compiler tools are free and the board is available at a low cost. Boards will be provided for free to any student participating in a BeagleBoard.org-related GSoC project.
Texas Instruments sponsors a number of BeagleBoard.org-related activities and the first members of the community were TI employees, however, the collaboration base is now stronger than ever with over 10,000 members on the mailing list, over 100,000 individual developers worldwide who have purchased Beagle hardware and over 150 developers who actively participate on the live chat (IRC channel) at any given time. Existing projects are often for the purpose of building robots, autonomous flying drones, automotive entertainment and navigation systems, home media centers, digital signs, wearable computers, gaming consoles and even 3d printers! (over 380 projects registered at http://beagleboard.org/project/) Existing software compatibility includes various versions of Android, Ubuntu, Angstrom, Gentoo, FFmpeg, XBMC, ROS, OpenCV and much more."
Berkman Klein Center for Internet and Society,https://cyber.harvard.edu,"Exploring cyberspace, sharing in its study, & helping to pioneer its development
Exploring cyberspace, sharing in its study, and helping pioneer its development.
The Berkman Klein Center for Internet & Society at Harvard University was founded to explore cyberspace, share in its study, and help pioneer its development. We represent a network of faculty, students, fellows, entrepreneurs, lawyers, and virtual architects working to identify and engage with the challenges and opportunities of cyberspace.
We investigate the real and possible boundaries in cyberspace between open and closed systems of code, of commerce, of governance, and of education, and the relationship of law to each. We do this through active rather than passive research, believing that the best way to understand cyberspace is to actually build out into it.
Our faculty, fellows, students, and affiliates engage with a wide spectrum of Net issues, including governance, privacy, intellectual property, antitrust, content control, and electronic commerce. Our diverse research interests cohere in a common understanding of the Internet as a social and political space where constraints upon inhabitants are determined not only through the traditional application of law, but, more subtly, through technical architecture (""code"").
As part of our active research mission, we build, use, and freely share open software platforms for free online lectures and discussions. We also sponsor gatherings, ranging from informal lunches to international conferences, that bring together members of our diverse network of participants to swap insights – and sometimes barbs – as they stake out their respective visions for what the Net can become. We also teach, seeking out online and global opportunities, as well as supporting the traditional Harvard Law School curriculum, often in conjunction with other Harvard schools and MIT.
Read more about the Berkman Klein Center at our homepage."
"Biomedical Informatics, Emory University",https://github.com/sharmalab/Emory-BMI-GSoC-2019,"Department of Biomedical Informatics (BMI), Emory University School of Medicine
Biomedical Informatics (BMI) is a multidisciplinary field that is motivated by our desire to improve diagnosis, clinical care, and human health, through novel computational approaches to use (and learn from) biomedical and clinical data. We use our expertise in computer science and informatics by developing various enabling tools, technologies, and algorithms to solve specific biomedical and clinical applications. And in doing so help advance our understanding of disease and treatment, and also develop useful software and applications. Members of the department work in a variety of areas that range from machine learning, healthcare middleware that leverages cloud computing, clinical information systems, clinically oriented image analysis, and biomedical knowledge modeling. The driving applications for the various ongoing projects include cancer research, organ transplant, HIV, medical imaging, radiation therapy, and clinical data analytics. All development work that is undertaken is free and open-source.
We have had a diverse set of successful GSoC projects in the past. In previous years, GSoC students have worked on diverse projects such as: geospatial systems for exploring microscopy environments that leveraged Hadoop; GPU accelerated pipelines for computational analysis of digitized biopsies; interactive visualization platforms for viewing massive images (>1GB); systems for data agnostic sharing of biomedical research datasets; Apache Drill based data integration platform; CNN based high throughput analysis of digitized biopsies; and information visualization of heterogeneous medical data. Many of these projects have been published in reputable journals and presented at major conferences. Some of the projects proved to be so successful that they were adopted in major national/international biomedical research initiatives."
Blender Foundation,http://www.blender.org,"Free and open source 3D creation for everyone, forever.
Blender is the free/open source 3D creation software for everyone, providing individuals and small teams a complete pipeline for 3D graphics, modeling, animation and games.
Blender is being made by 100s of active volunteers from all around the world; by studios and individual artists, professionals and hobbyists, scientists and students, vfx experts and animators, and so on.
All of them are united by an interest to have access to a fully free/open source 3D creation pipeline. Blender Foundation supports and facilitates these goals - even employs a small staff for that - but fully depends on the online community to achieve it.
Since 2005, Blender has organized a dozen short open films and a game project, which helped Blender tremendously to get more accepted by professionals in their daily work.
We invite students to think of ways to help us with this further. If your passion is with 3D coding, creativity tools, scientific simulation, or anything related to Computer Graphics in general, feel welcome to join us!"
Boost C++,https://www.boost.org/,"Boost provides free peer-reviewed portable C++ source libraries
Boost provides free peer-reviewed portable C++ source libraries.
We emphasize libraries that work well with the C++ Standard Library. Boost libraries are intended to be widely useful, and usable across a broad spectrum of applications. The Boost license encourages both commercial and non-commercial use.
We aim to establish existing practice and provide reference implementations so that Boost libraries are suitable for eventual standardization. Many Boost libraries are included in the C++ Standards Committee's Library Technical Report (TR1), in the C++11, C++14 and C++17 standard. More Boost libraries are proposed for standardization in C++20.
Since 2006 an intimate week long annual conference related to Boost called C++ Now has been held in Aspen, Colorado each May. Boost has been a participant in the annual Google Summer of Code since 2007."
BRL-CAD,https://opencax.github.io,"Solid geometry, computer graphics, 3D printing, modeling, CAD, CAM, & other CAx!
This is the place to be if you love or want to learn more about computer graphics. We do 2D/3D modeling, 3D printing, solid geometry, ray tracing, and more. Depending on the project, you'll work with C/C++, Python, OpenGL, OpenCL, Qt, Tcl/Tk, Javascript/Node.js, and so much more... Help us make computer-aided technologies (CAx) to be freely used around the world!
BRL-CAD operates under an umbrella organization with several other computer-aided technologies (CAx) including:
OpenSCAD is a solid 3D modeler with a rich syntax for programmable geometry.
Slic3r is a 3D model processor for generating printing instructions for 3D printers.
LibreCAD is a 2D modeling system specializing in blueprint-style drawings and draftings.
FreeCAD provides parametric 3D modeling with engineering functionality like FEM and CAM.
We want to select at least one student for each, so feel free to ask us where to start."
Buildroot,http://www.buildroot.org,"Making Embedded Linux easy
Buildroot is used by thousands of companies and individuals around the world to build from source highly customized and optimized embedded Linux systems. Companies as famous as GoPro, Tesla or Google use Buildroot for various products.
Based on the standard technologies GNU Make and Kconfig, Buildroot is easy to learn and understand, and quickly allows to build an embedded Linux system, including a cross-compilation toolchain, a root filesystem with numerous applications and libraries, a Linux kernel image, and one or several bootloader/firmware images. It offers more than 2400 packages for a wide variety of open-source software, such as Qt5, X.org, Wayland, Kodi, Python, PHP, Go, Gtk and many more.
By working on Buildroot, students will learn a lot about how a Linux system works and how it is built. They will enjoy working in a friendly community of embedded Linux experts, and will learn using a tool that is used by thousands of companies in the embedded industry around the world."
Canadian Center for Computational Genomics,http://computationalgenomics.ca/,"Analytical solutions for Next-Generation Sequencing data
The Montreal C3G node is hosted at the McGill University and Genome Quebec Innovation Centre (MUGQIC). The Montreal node is strongly involved with GenAP and has developed several genomic data analysis pipelines. Our teams have significant experience in personalized medicine applications. Since 2011, we have completed more than 400 bioinformatics analysis projects with over 290 distinct groups of researchers across Canada. These have included genome analysis and interpretation of personal genomes, technology and services to record patient presentations, RNA- and ChIP-seq data analysis, and analysis of complete human epigenomes, in both germline disorders and cancers. Each year C3G co-organizes several international workshops about next-generation sequencing data analysis.
The Montreal C3G node develops the GenPipes pipelines which consist of Python scripts which create a list of jobs running Bash commands to analyze NGS data. Those scripts support dependencies between jobs and a smart restart mechanism if some jobs fail during pipeline execution. Job commands and parameters can be modified through several configuration files. We currently maintain 7 pipelines and are developing 3 others.
The Montreal C3G node also develops several bioinformatics tools:
BVAtools
POPsv
SCoNEs"
Catrobat,https://catrobat.org,"Computational Thinking for All with Free Visual Coding Apps
The Catrobat project develops useful frameworks to create games, animations, or apps easily within a short time. This set of creativity tools for smartphones, tablets, and browsers is inspired by the well-known Scratch framework by the Lifelong Kindergarten Group at the MIT Media Lab. The motivation behind the project is that programming is an important cultural technique on the same level as mathematics and physics, from a practical as well as from a philosophical point of view. Our aim thus is to popularize the skills needed to program from an early age on in a fun and engaging way that will facilitate the spread of its adoption among young people all over the world. Our awarded Android app “Pocket Code” is currently the most famous outcome of the project. Without the need of any further devices, users have the possibility to create their first program directly on their mobile device in a “Lego-like” style with blocks in just a few steps. Pocket Code supports all common device sensors, provides special bricks for different robotic devices (Lego Mindstorms, Robotix Phiro,...) as well as for hardware devices such as the Arduino board or the Raspberry Pi, and of course offers elements of programming languages such as variables, if-statements, concurrency, etc. We also work on frameworks for other OS and on making it available on browsers. That’s why developers of different fields help us to keep our products up to date to the current needs of the users. Motivated by prizes (such as the Lovie Award, the Austrian National Innovation Award or the Re-Imagine Education Award) and being featured by different programs (like Google Play for Education or code.org) our team is working on many different subprojects and extensions which will be released in the coming years. Over 500 developers already contributed to our project on different topics such as App-Development, Web-Technologies, Graphics, Usability, Internationalization, or Design."
cBioPortal for Cancer Genomics,http://www.cbioportal.org/,"Developing open source solutions for discovery from complex cancer data
About the cBioPortal
The cBioPortal for Cancer Genomics is a resource designed to provide broad community access to cancer genomic data. It provides a unique user­-friendly and ""biology­-centric computational user interface"", with the goal of making genomic data more easily accessible to translational scientists, biologists, and clinicians. The interface was explicitly built and continues to evolve with careful usability studies involving multiple biological and clinical users, and an active and engaged user base.
The public cBioPortal is now one of the most popular resources for cancer genomics data and attracts more than 3,000 cancer researchers and clinicians per day. The cBioPortal paper (Cerami et al. Cancer Discov. 2012 has been cited more than 4,000 times since its publication.
The cBioPortal project has become an open source project under the Affero General Public License (AGPL), due to the high demand for local installations and contribution requests. There are more than 40 actively used cBioPortal instances in hospitals, universities, pharmaceutical companies, and other institutes all over the globe.
About us
We are a group of software engineers, bioinformaticians, and cancer biologists building software solutions for precision medicine for cancer patients. Our overall goal is to build infrastructure to support clinical decisions for personalized cancer treatment by utilizing “big data” of cancer genomics and patient clinical profiles. Our multi-institutional team currently has more than 30 active members, primarily from Memorial Sloan Kettering Cancer Center in New York, the Dana-Farber Cancer Institute in Boston, Princess Margaret Cancer Centre in Toronto, Children's Hospital of Philadelphia, and The Hyve, a bioinformatics company from the Netherlands."
CBMI@UTHSC,https://cbmi.lab.uthsc.edu/people-2/people/,"We develop Biomedical and Clinical informatics applications
CBMI@UTHSC provide the researchers, and clinicians with customized biomedical and clinical informatics applications to help manage complex translational and clinical research needs and gain insights into various diseases and conditions.
In the past, we have developed an open source software for online feature extraction and machine learning pipeline for real-time analysis of streaming physiological data. We have also built machine learning and deep learning models to predict fever, sickle cell disease, and sepsis in children and adults.
Through the Google Summer of Code (GSoC) program, we are specifically interested in creating open-source web application to identify the onset of abnormal conditions using the large-scale real-time sensor data at the bed-side."
CCExtractor Development,https://www.ccextractor.org/,"Tools to make the world more accessible, starting with media
CCExtractor Development is the creator of the de-facto captions extraction tool - CCExtractor. It is the one tool that is free, portable, open source and community managed that can take a recording from a TV show and generate an external subtitle file for it.
If you regularly watch content with subtitles you download from fan sites - you should know that the source file is most likely generated by CCExtractor. If you are a student in a university that uses subtitles for natural language study, you should know that most likely we are involved somehow.
While we already support subtitles from North America, Europe, Australia and more, our world map is not yet complete. We are actively looking for students that want to help us fill the gaps. We also want to automate many of the processes that are currently done manually, such as achieving perfect sync, our media file management.
In addition to continuously evolve our core tool, we have a growing number of new projects: JokerTV integration, YouTube TV/Hulu support, AI, rclone, cloud, and a few more that are starting to take shape.
The best part is - students have flexibility of choosing projects from a wide range of topics & technologies and even propose their own. We provide exceptional resources for students. Read more about the perks on our website.
We’re very excited to take part in GSoC for the 7th time. Most of our past students are still involved and are active in the community, which simply goes on to show how friendly and approachable is the environment. If you want to be a part of such community and help achieve our goals, come join our Slack group or mailing list!"
Center for Research in Open Source Software at UC Santa Cruz,http://cross.ucsc.edu,"Bridging Gap Between Student Work and Successful Open Souce Projects
The Center for Research In Open Source Software (CROSS) at the University of California in Santa Cruz (UCSC) aims to bridge the gap between student research and open source software projects. CROSS turns OSS prototypes into successful open source software projects. The Center was created in 2015 inspired by the story of UCSC alumni (and CROSS benefactor) Sage Weil, who turned his research prototype Ceph into a multi-million dollar company. We draw from the expertise of our affiliated experts and industry members to choose projects that will have maximum real world impact. Our projects are mentored and guided by a team of experts chosen specifically to best ensure success.
CROSS uses a combination of teaching, networking, research and incubation of open source projects. With the support of our industry members, CROSS currently funds six open source software projects-- three research projects and three incubator projects. These projects are:
Skyhook: Programmable Storage for Databases (https://sites.google.com/view/skyhook-programmable-storage)
Tracery2 and Chancery (http://www.tracery.io/)
Black Swan: The Popper Reproducibility Platform (http://falsifiable.us/)
LGraph: Open Source Multi-Language Synthesis and Simulation Infrastructure (https://github.com/masc-ucsc/lgraph)
CAvSAT: A System for Query Answering over Inconsistent Databases (https://github.com/uccross/cavsat)
Eusocial Storage Devices: Quantifying the benefits of offloading to smart storage devices (https://www.usenix.org/publications/login/summer2018/kufeldt)"
CERN-HSF,http://hepsoftwarefoundation.org/activities/gsoc.html,"Umbrella organization for Particle (High-Energy) Physics-related projects
CERN-HSF (High-Energy Physics Software Foundation) is the umbrella organization for high-energy physics-related projects in GSoC. The HEP Software Foundation (http://hepsoftwarefoundation.org/) facilitates the coordination of common international efforts in high-energy physics software and computing.
CERN (European Organization for Nuclear Research, https://home.cern) has participated in GSoC since 2011 as the CERN-SFT group, which provides common software for CERN's experiments. In 2017, the program expanded to include many software projects from the whole field of high-energy physics. The vast majority of our GSoC projects do not require any physics knowledge.
The experiments at CERN, such as the Large Hadron Collider, the world’s largest and most powerful particle accelerator (http://home.cern/topics/large-hadron-collider) try to answer fundamental questions about the Universe. For example, what is the nature of mass? What are the elementary building blocks of the Universe? What was the early Universe like? What is the nature of dark matter and dark energy? Why is there an asymmetry between matter and antimatter? In 2012, LHC experiments announced the discovery of a new particle, the Higgs Boson, that helps explain how particles obtain mass. Also, CERN is the birthplace of the World Wide Web. Today, particle physicists are working on analyzing the data from the experiments to study the properties of the newly discovered particle and to search for new physics, such as dark matter or extra dimensions. This requires a lot of sophisticated software.
The open-source high-energy physics projects to which students can contribute during GSoC span many high-energy physics software projects: data analysis, detector and accelerator simulation, event reconstruction, data management and many others. We look forward to your contributions!"
CGAL project,https://www.cgal.org,"C++ library of computational geometry and geometry processing
CGAL is a software library that offers a number of reliable geometric data structures and algorithms. CGAL components operate in 2D and 3D, and sometime in arbitrary dimensions. Examples of components include convex hulls, convex decomposition, Delaunay triangulations, Voronoi diagrams, polygonal surface mesh data-structures, mesh generation, Boolean operations, envelope computations, intersection detection, surface reconstruction, and subdivision surfaces.
CGAL is used in a variety of application domains such as CAD/CAM (computer aided design and modeling), GIS (geographic information systems), geophysics, image processing, molecular biology, robotics, motion planning, and graphics.
CGAL is written in C++ and rigorously adheres to the generic-programming paradigm.
CGAL became an Open Source project in 2003. Most of CGAL is under the GPL v3+ license, and some core parts are under the LGPL v3+. The semi-annual releases have currently about 10,000 downloads. CGAL is commercially supported by the spin-off company GeometryFactory."
CHAOSS,https://chaoss.community,"Aimed at improving our understanding of open source health and sustainability
Our open source ecosystem is growing. More developers and companies engage in open source every year because it is cost efficient, it enables rapid innovation, and it promotes open standards. Open source is becoming the default for software development.
The importance of open source software is no longer in question. However, its importance raises important questions about the open source ecosystem. Open source contributors want to know where they should place their efforts and know that they are making an impact. Open source communities want to attract new members, ensure consistent quality, and reward valuable members. Open source companies want to know which communities and software to engage with, communicate the impact the organization has on the community, and evaluate the work of their employees within open source. Open source foundations want to identify and respond to community needs, evaluate the impact of their work, and promote communities.
In response to these issues, the CHAOSS community is developing metrics, methodologies, and software for expressing open source project health and sustainability. By measuring open source project health and sustainability, CHAOSS seeks to improve the transparency of open source project health and sustainability so that relevant stakeholders can make more informed decisions about open source project engagement."
Chapel,https://chapel-lang.org/,"a Productive Parallel Programming Language
Chapel is an open-source programming language designed for productive parallel computing at scale. Chapel is implemented with portability in mind, permitting Chapel to run on multicore desktops and laptops, commodity clusters, and the cloud, in addition to the high-end supercomputers for which it was designed. Chapel's design and development are being led by Cray Inc. in collaboration with academia, computing centers, and industry. Chapel offers a unique experience for students to work on projects involving high-performance computing, parallel programming, and compiler development.
Core features
Native Parallelism
Chapel supports parallelism at the language level. For instance, Chapel provides a ""coforall"" loop, which is similar to a ""for"" loop and creates a separate task per iteration of the loop body. These explicit parallelism features make it easier to reason about the parallelism in your algorithm and program.
Data and Task Locality
When working on a large machine, the location of some data relative to the task which uses it or other data with which it must work plays a key role in performance. Chapel provides features which allow you to control that placement, both within a data structure and outside it.
Multiresolution Philosophy
Chapel is designed around a multiresolution philosophy, permitting users to initially write very abstract code and then incrementally add more detail until they are as close to the machine as their needs require.
Modern Language Features
Chapel supports code reuse and rapid prototyping via object-oriented design, type inference, and features for generic programming.
Interoperability
Existing code from other languages can be integrated into Chapel programs (or vice-versa) via interoperability features."
Checker Framework,https://checkerframework.org/,"Prevent programming errors before they happen, via easy-to-use verification
We are a group of developers who are passionate about code quality. We have built an innovative lightweight verification tool called the Checker Framework.
The Checker Framework helps you prevent bugs at development time, before they escape to production. It is based on the idea of pluggable type-checking. Pluggable type-checking replaces a programming language's built-in type system with a more powerful, expressive one.
Java's type system prevents some bugs, such as int count = ""hello"";. However, it does not prevent other bugs, such as null pointer dereferences, concurrency errors, disclosure of private information, incorrect internationalization, out-of-bounds indices, etc.
The Checker Framework enables you to create a more powerful type system and use it in place of Java's. The more powerful type system is not just a bug-finding tool: it is a verification tool that gives a guarantee that no errors (of certain types) exist in your program. Even though it is powerful, it is easy to use. It follows the standard typing rules that programmers already know, and it fits into their workflow. We have created around 20 new type systems, and other people have created many more.
The Checker Framework is popular: it is successfully used on hundreds of projects at Google, Amazon, Uber, on Wall Street, and in other companies from big to small. It it attractive to programmers who care about their craft and the quality of their code. The Checker Framework is the motivation for Java's type annotations feature. Talks on it have received multiple awards at conferences such as JavaOne. With this widespread use, there is a need for people to help with the project: everything from bug fixes, to new features, to case studies, to IDE integration. We welcome your contribution!
Please see our ideas list for how to get started and how to ask questions."
CircuitVerse.org,https://circuitverse.org/,"Have fun exploring logic circuits right from your browser!
CircuitVerse is an easy to use digital logic circuit simulator which aims at providing a platform to create, share and learn digital circuits. It can run on almost any device without the need for installing any software. The platform has been designed for use by students, professionals and hobbyists alike. The vision is to develop a community around the platform which will aid students to self-learn digital logic design. Apart from the simulator, users can create, learn, collaborate and share their work. CircuitVerse is currently used by several universities worldwide since it provides features for teachers to create groups and host assignments on the platform."
CiviCRM,https://civicrm.org,"Growing and sustaining relationships
CiviCRM is an open source CRM built by a community of contributors and supporters, and coordinated by a Core Team. CiviCRM is web-based software used by a diverse range of organisations, particularly not-for-profit organizations (nonprofits and civic sector organizations). CiviCRM offers a complete feature set out of the box and can integrate with your website.
CiviCRM is created and used by a global community of tens of thousands of individuals and organisations. Our vision is that 'all organisations – regardless of their size, budget, or focus – have access to an amazing CRM to engage their contacts and achieve their missions'. Our roadmap outlines the shorter term goals we are implementing to acheive our vision.
At the center of our community is a Core Team of staff that are employed to co-ordinate and provide leadership for the project, and to serve our users and service providers. Many of the organisations involved with CiviCRM choose to become members and partners with us. By doing so they help to secure our financial stability and their investment in CiviCRM.
There are many different ways to get involved with CiviCRM. Our community guidelines aim to help people to get involved with our community, understand how we work together, and what we expect of each other.
CiviCRM is released under the GNU Affero General Public License version 3 (GNU AGPL v3)."
"CLiPS, University of Antwerp",https://www.uantwerpen.be/en/research-groups/clips,"Computational Psycholinguistics
The Computational Linguistics & Psycholinguistics Research Group of the University of Antwerp (CLiPS, http://www.clips.uantwerpen.be) focuses on applications of statistical and machine learning methods, trained on corpus data, to explain human language acquisition and processing data, and to develop automatic text analysis systems that are accurate, efficient, and robust enough to be used in practical applications.
There are 3 subgroups to CLiPS: (1) the sociolinguistics group studies language variation in different demographic groups. The (2) psycholinguistics group studies the effect of cochlear implantation on child language acquisition. This description focuses on (3) the computational linguistics group.
Current research at CLiPS' Computational Linguistics Group focuses on developing tools that can extract data from social media messages, such as fine-grained sentiment analysis, and the detection of subversive behavior on social network sites (sexually transgressive behavior, hate speech, ...). Furthermore, CLiPS is well known for its work on computational stylometry and has developed state-of-the-art technology for authorship attribution, as well as author profiling, i.e. the detection of personality, age and gender of the author of a text, based on personal writing style. Another line of research at CLiPS focuses on computational psycholinguistics and researches psychologically plausible models of child language acquisition and bilinguality. CLiPS also researches and develops tools for biomedical text mining.
Over the years, CLiPS has established a strong reputation in the application of machine learning methods on a variety of language technology problems for a wide range of languages. To capitalize on this reputation, a spin-off company, Textgain (textgain.com), was founded in 2015 that aims to bring CLiPS technology to the market for commercial purposes."
Cloud Native Computing Foundation (CNCF),https://www.cncf.io,"Sustaining and Integrating Cloud Native Open Source Technologies
Cloud native technologies empower organizations to build and run scalable applications in modern, dynamic environments such as public, private, and hybrid clouds. Containers, service meshes, microservices, immutable infrastructure, and declarative APIs exemplify this approach.
These techniques enable loosely coupled systems that are resilient, manageable, and observable. Combined with robust automation, they allow engineers to make high-impact changes frequently and predictably with minimal toil.
The Cloud Native Computing Foundation seeks to drive adoption of this paradigm by fostering and sustaining an ecosystem of open source, vendor-neutral projects. We democratize state-of-the-art patterns to make these innovations accessible for everyone."
CloudCV,https://cloudcv.org,"Building platforms for reproducible AI research
CloudCV is an open source cloud platform led by graduate students and faculty at the Machine Learning and Perception Lab at Georgia Tech, with the aim of building tools that for reproducible and accessible AI research and development. At CloudCV, we are building tools that enable researchers to build, compare, and share start-of-the-algorithms. We believe that one shouldn’t have to be an AI expert to have access to cutting-edge vision algorithms. Likewise, researchers shouldn’t have to worry about building a service around their deep learning models to showcase and share it with others.
We are building a platform called EvalAI as a scalable solution for the research community to fulfill the critical need of evaluating machine learning models. This will help researchers, students, and data scientists to create, collaborate, and participate in AI challenges organized around the globe. By simplifying and standardizing the process of benchmarking these models, we seek to lower the barrier to entry for participating in the global scientific effort to push the frontiers of machine learning and artificial intelligence, thereby increasing the rate of measurable progress in this domain."
coala,https://coala.io,"Linting and Fixing Code for All Languages
coala provides a common command-line interface for linting and fixing all your code, regardless of the programming languages you use. It allows users to analyse projects containing multiple languages with just one tool, using just one configuration and seeing just one user interface.
of existing tools, wrapped by bears, and native analysis routines. This enables users to check their python code for pep8 conformity, calculate complexity for their java code, find code duplicates in the C code and check the documentation for spelling errors, while making sure the commits follow the set guidelines. All controlled via one configuration file, run with one command and served in the same user interface. For Users
coala offers a unified static code analysis suite. It can be used as a simple standalone testing suite, pre-commit hook and CI tool. Besides the normal user interactive mode, there is a non interactive mode for CI, a html output mode, to view results in the browser, and JSON output if you want to integrate coala into your own system. If implemented, coala even offers to automatically fix problems. For Developers
You can easily write your own bears. coala is written with ease of extension in mind. That means: no big boilerplate, just write one small object with one routine, add the parameters you like and see how coala automates the organisation of settings, user interaction and execution parallelisation. For Newcomers
coala offers a great newcomer experience with an in depth step by step guide for your first contribution, extensive documentation of the whole workflow and fast and easy communication over the gitter channel."
Computational Biology @ University of Nebraska-Lincoln,http://helikarlab.org,"Tool development in bioinformatics, computational biology, data visualization
Our team works at the interface of computer science, biology, and mathematics by applying computational approaches to the seas of data in life sciences research. One of the main interests of our group is the development of technologies to make large-scale computational approaches accessible and more collaborative to a wider scientific audience. For example, our web-based technology, Cell Collective, enables scientists from across the globe to construct and simulate large-scale computational models of biological systems in a highly collaborative fashion. This software enables biomedical researchers to study the dynamics of biological systems (e.g., cells) under both healthy and diseased conditions. Cell Collective provides a unique environment for real-time, interactive simulations to enable users to analyze and visualize the multitude of effects a disease-related malfunction can have on the rest of the cell.
Our technologies have broad impact in education: Traditional didactic and textbook-based learning formats utilized in many life sciences courses create an environment that limits student ability to develop highly needed technical skills and fully conceptualize the complex and dynamic nature of biology and diseases. To address these challenges, our software technologies enable students ranging from high schools to undergraduate and graduate levels to learn about biology and diseases using by building, simulating, breaking, and re-analyzing computational models of these biological systems.
Other technologies developed by our organization include cost-effective mobile disease monitoring devices, interactive on-line tissue sample analysis, an interactive statistical analysis platform for teaching life sciences students about data analysis, etc. Our group consists of computer scientists, biochemists, biologists, bioinformaticians, as well as mathematicians, creating an unique environment of diverse skills, integrated by a single interest point."
coreboot,https://www.coreboot.org/,"open source firmware projects
coreboot provides a fast, reliable, secure, and predictable boot-firmware solution for numerous modern and legacy chipsets. There are millions of devices running coreboot, including Google Chromebooks and Chromeboxes, and it runs in many datacenters. In 2018, coreboot.org had over 200 active developers, and over 3500 commits.
coreboot believes in the principles of Open Source software. It borrows many well known concepts from other Open Source projects: Kconfig, Linux kernel coding style, git repository, and gerrit for code reviews.
coreboot has numerous advantages over other firmware projects. It comes with SoC support available to all developers. The codebase is shared with developers and companies which are helping improving the SoC and driver-specific implementations.
Extremely fast
coreboot is designed to do the minimum amount necessary and get out of the way.
Desktop and Notebooks boot up in 400ms - 2.5s.
Server boot time can be as low as a quarter of the OEM BIOS boot time.
Flexible and customizable
Because coreboot only does hardware init, then jumps to a payload to continue, it is very flexible.
GPLv2 licensed core. Payloads can be proprietary and we offer a BSD licensed support library. coreboot provides ready-to-build payloads like UEFI, SeaBIOS, U-Boot, Grub2 and many more..
Recovery Mode based on multiple copies of the firmware which can be updated independently.
Integrity of stages and binaries in coreboot can be easily verified.
Designed for security by default
Uses a minimal trusted computing base for each platform which is easily auditable, helping to guarantee security. As coreboot is Open Source, anyone can check the codebase.
Debugging
There are multiple ways to extract the boot log, from classic serial to EHCI debug, even over the pc-speaker.
GDB Stub support via serial.
In memory console log support
Tracing functions and other exotic features are supported."
Creative Commons,https://creativecommons.org,"Nonprofit building tools to promote digital creativity, sharing, and innovation.
Creative Commons (CC) is a United States-based nonprofit 501(c)3 organization that provides open content copyright licenses, public domain tools, and resources on copyright and information literacy in the digital age. Our free, easy-to-use copyright licenses provide a simple, standardized way for all creators, authors, and producers of knowledge assets and cultural works to give the public permission to share and use their works on conditions of their choice. CC licenses work in tandem with copyright, allowing creators to easily and legally change copyright terms from the default of “all rights reserved” to “some rights reserved” to best suit their needs.
In addition to the ongoing development and improvement of legal and technical tools for sharing, CC runs programs to put these tools into use in the world, and to mainstream open access, broad sharing, and reuse of creative works and knowledge assets. CC’s programmatic work encompasses outreach, trainings, partnerships, and much more, targeted to achieve measurable impact in improving affordable access to and enhancing reuse of content by anyone, anywhere, towards a more informed, culturally enriched, and productive society. All of CC’s work is amplified by a diverse and global network of volunteer affiliate groups."
CRIU (Checkpoint/Restore in User-space),https://criu.org,"CRIU (Checkpoint/Restore in User-space)
Checkpoint/Restore In Userspace, or CRIU, is a software tool for the Linux operating system. Using this tool, you can freeze a running application (or part of it) and checkpoint it as a collection of files on disk. You can then use the files to restore the application and run it exactly as it was during the time of the freeze. With this feature, application live migration, snapshots, remote debugging, and many other things are possible.
CRIU started as a project of Virtuozzo and grew with tremendous help from the community. It is currently used by (integrated into) OpenVZ, LXC/LXD, Docker, and other software, and packaged for many Linux distributions."
Cuneiform Digital Library Initiative (CDLI),https://cdli.ucla.edu,"International digital library of artifacts inscribed with cuneiform writing
The mission of the Cuneiform Digital Library Initiative (CDLI) is to collect, preserve and make available images, text and metadata of all artifacts inscribed with the cuneiform script. It is the sole project with this mission and we estimate that our 334,000 catalogue entries cover some two-thirds of all sources in collections around the world. Our data are available publicly at https://cdli.ucla.edu and our audiences comprise primarily scholars and students, but with growing numbers of informal learners.
At the heart of cdli is a group of developers, language scientists, machine learning engineers, and cuneiform specialists who develop software infrastructure to process and analyze curated data. To this effect, we are actively developing two projects: Framework Update https://cdli.ucla.edu/?q=news/cdli-core-update and Machine Translation and Automated Analysis of Cuneiform Languages https://cdli-gh.github.io/mtaac/. As part of these projects we are building a natural language processing platform to empower specialists of ancient languages for undertaking automated annotation and translation of Sumerian language texts thus enabling data driven study of languages, culture, history, economy and politics of the ancient Near Eastern civilizations. As part of this platform we are focusing on data standardization using Linked Open Data to foster best practices in data exchange and integration with other digital humanities and computational philology projects."
D Programming Language,https://dlang.org,"Fast code, fast.
D is a programming language with an emphasis on powerful metaprogramming facilities on top of a robust, efficient core. Idiomatic D programs are commonly as fast as hand-optimized C code, while being reportedly shorter and easier to write, read, and change. A gradual approach to memory safety allows safe programs to be largely automatically checked, whilst relying on small and fast manually-verified primitives.
Metaprogramming in the D language relies on three core features. First, compile-time evaluation allows user code to evaluate most D code (except calls into opaque functions or certain casts) during compilation. This allows for unparalleled compile-time processing abilities, without the need to learn a different metalanguage. Second, static introspection allows D artifacts (such as modules, types, functions) to be inspected during compilation. This allows for component designs that adapt to one another at assemblage time, eliminating the rigidity of fixed interfaces - a paradigm becoming increasingly known as ""Design by Introspection"". Third, the D language allows strings computed during compilation to be fed back to the compiler. This allows arbitrarily complex code to be built from compact specifications such as regular expressions, EBNF/PEG grammars, SQL, automata, and many other DSLs. Each of these three pillars is enabled by the others, and the absence of any one of them would hamstring the power of the others.
D's rich feature set offers many opportunities to a variety of projects, without them being ostensibly related to advanced metaprogramming facilities. High-performance code can be terse and highly optimized without the tedium of repeated coding patterns or hand-written specializations. Highly dynamic code can combine static and dynamic language features in an expressive whole. The best, most innovative ways to use the D language are yet to be discovered.
You can learn more about D's feature set and design at dlang.org"
DBpedia,http://dbpedia.org,"Global and Unified Access to Knowledge.
DBpedia data is served as Linked Data, which is revolutionizing the way applications interact with the Web. One can navigate this Web of facts with standard Web browsers, automated crawlers or pose complex queries with SQL-like query languages (e.g. SPARQL). The English version of the DBpedia knowledge base describes 4.58 million things. In addition, we provide localized versions of DBpedia in 125 languages. The full DBpedia data set features 38 million labels and abstracts in 125 different languages, 25.2 million links to images and 29.8 million links to external web pages; 80.9 million links to Wikipedia categories, and 41.2 million links to YAGO categories. DBpedia is connected with other Linked Datasets by around 50 million RDF links Linked Data has been revolutionizing the way applications interact with the Web. While the Web2.0 technologies opened up much of the “guts” of websites for third-parties to reuse and repurpose data on the Web, they still require that developers create one client per target API. With Linked Data technologies, all APIs are interconnected via standard Web protocols and languages. One can navigate this Web of facts with standard Web browsers, automated crawlers or pose complex queries with SQL-like query languages (e.g., SPARQL). Have you thought of asking the Web about all cities with low criminality, warm weather and open jobs? This new Web of interlinked databases provides useful knowledge that can complement the textual Web in many ways. See, for example, how bloggers tag their posts or assign them to categories in order to organize and interconnect their posts. This is a simple way to connect unstructured text to a structure (hierarchy of tags). For further examples visit: https://wiki.dbpedia.org/gsoc We are regularly growing our community through GSoC and can deliver more and more opportunities to you."
Debian,https://www.debian.org/,"The Universal Operating System
The Debian Project is an association of individuals who have made common cause to create a free operating system -- Debian
An operating system is the set of basic programs and utilities that make your computer run. At the core of an operating system is the kernel. The kernel is the most fundamental program on the computer and does all the basic housekeeping and lets you start other programs.
Debian systems currently use the Linux kernel or the FreeBSD kernel.
However, work is in progress to provide Debian for other kernels, primarily for the Hurd. The Hurd is a collection of servers that run on top of a microkernel (such as Mach) to implement different features. The Hurd is free software produced by the GNU project.
A large part of the basic tools that fill out the operating system come from the GNU project; hence the names: GNU/Linux, GNU/kFreeBSD, and GNU/Hurd. These tools are also free.
Of course, the thing that people want is application software: programs to help them get what they want to do done, from editing documents to running a business to playing games to writing more software. Debian comes with over 51000 packages (precompiled software that is bundled up in a nice format for easy installation on your machine), a package manager (APT), and other utilities that make it possible to manage thousands of packages on thousands of computers as easily as installing a single application. All of it free.
It's a bit like a tower. At the base is the kernel. On top of that are all the basic tools. Next is all the software that you run on the computer. At the top of the tower is Debian — carefully organizing and fitting everything so it all works together."
Developers Italia,https://developers.italia.it/,"An open community of digital public services developers
Developers Italia is a community dedicated to the development of Open Source Software, created to support the Italian digital public services.
It is a radical change in the way the Public Administration operates. In fact, everything we are doing is achieved through open standards and software. We are creating SDKs for the main programming languages and frameworks, we craft publicly documented APIs, we organize public code catalogues. Our mission is to contribute to open projects, and the people we contract to improve the technology become Open Source developers.
Most of the code is deployed within the Italian public institutions, but it is meant to be generic, in the hope that it will be useful to many other people around the world. Around these tools we are engaging a community of developers and innovators, inside and outside Italy, that can participate in all aspects of the creation of the new digital infrastructure."
Digital Impact Alliance,http://digitalimpactalliance.org/,"Supporting open source projects for a digital society that serves everyone.
The Digital Impact Alliance (DIAL) at United Nations Foundation has launched its Open Source Center to provide a collaborative space for (and professional technical assistance to) open source projects focusing on international development and humanitarian response.
We are a Google Summer of Code umbrella organization that works with many of the leading projects in this area, including Ushahidi, Humanitarian Open Street Map Team, OpenLMIS, SUMSarizer, LibreHealth, and Open Data Kit.
Our Center assists in the establishment of effective governance, software project management, and contribution models for member projects. It also provides technical, architectural, and programming support for projects; and assists those projects in support, engagement, management of their communities of contributors and implementers. More information about the DIAL Open Source Center is available at http://osc.dial.community/.
This year, our sub-organizations include: (final list of sub-orgs pending list of which orgs will participate independently)
Read more about these projects and other humanitarian & international development projects participating in Google Summer of Code at: http://gsoc.dial.community/"
Django Software Foundation,https://www.djangoproject.com/,"The web framework for perfectionists with deadlines.
Django is a high-level Python Web framework originally developed at the Lawrence-Journal World. Django was designed to handle two challenges: the intensive deadlines of a newsroom and the stringent requirements of the experienced Web developers who wrote it. It lets you build high-performing, elegant Web applications quickly."
Drupal,https://www.drupal.org,"Drupal is a Free, Open, Modular CMS written in PHP. Let's make something amazing
Drupal is content management software. It's used to make many of the websites and applications you use every day. Drupal has great standard features, like easy content authoring, reliable performance, and excellent security. But what sets it apart is its flexibility; modularity is one of its core principles. Its tools help you build the versatile, structured content that dynamic web experiences need. It's also a great choice for creating integrated digital frameworks. You can extend it with any one, or many, of thousands of add-ons. Modules expand Drupal's functionality. Themes let you customize your content's presentation. Distributions are packaged Drupal bundles you can use as starter-kits. Mix and match these components to enhance Drupal's core abilities. Or, integrate Drupal with external services and other applications in your infrastructure. No other content management software is this powerful and scalable. The Drupal project is open source software. Anyone can download, use, work on, and share it with others. It's built on principles like collaboration, globalism, and innovation. It's distributed under the terms of the GNU (GPL). There are no licensing fees, ever. Drupal will always be free. The Drupal community is one of the largest open source communities in the world. We're more than 1,000,000 passionate developers, designers, trainers, strategists, coordinators, editors, and sponsors working together. We build Drupal, provide support, create documentation, share networking opportunities, and more. Our shared commitment to the open source spirit pushes the Drupal project forward. New members are always welcome. Drupal 8 is the biggest update in Drupal's history. Creating content is easier. Every built-in theme is responsively designed. It's available in 100 languages, and its integration tools make it a great hub for complex ecosystems. More than 4,500 people, companies, and organizations contributed their time, experience, and imagination."
Earth Science Information Partners,http://esipfed.org,"Supporting community development of visionary Earth science data technology.
Earth Science Information Partners (ESIP) is a community of Earth science data and information technology practitioners who steward Earth science data, ensuring discovery, access and use of the data to decision makers, researchers and the public. ESIP’s strength comes from the depth of its partner organizations, which now number 110. Among these are all NOAA, NASA and USGS Earth observing data facilities, as well as government research laboratories, research universities, modelers, education resource providers, technology developers, nonprofits and commercial enterprises.
The Earth Science Information Partners was founded in 1998 by NASA in response to a National Research Council (NRC) review of the Earth Observation System Data and Information System (EOSDIS). The NRC called on NASA to develop a new, distributed structure that would be operated and managed by the Earth science community that would include those responsible for all elements of Earth observation, including observation and research, application and education. In 2003, ESIP incorporated as a 501(c)3."
Fedora Project,https://getfedora.org/,"Fedora Linux is built on the foundations of Freedom, Friends, Features, & First
The Fedora Project's core values, or Foundations, are Freedom, Friends, Features, & First. Read more about them here: https://fedoraproject.org/wiki/Foundations
A key component of this is our Community. This community, which you will join as an participant in Google Summer of Code, is creating a platform that supports the work of a diverse audience. Your contributions can affect people you've never met in situations you've never dreamed of. The Fedora community includes software engineers, artists, system administrators, web designers, writers, speakers, and translators -- all of whom will be happy to help you get started.
Full project description available here: https://fedoraproject.org/wiki/Overview
We believe that all contributors should expect and be part of a safe and friendly environment for constructive contribution. We can more effectively and successfully compare and challenge different ideas to find the best solutions for advancement, while building the size, diversity, and strength of our community."
FFmpeg,https://ffmpeg.org/,"A complete, cross-platform solution to record, convert and stream multimedia.
What FFmpeg is
FFmpeg is the leading multimedia framework, able to decode, encode, transcode, mux, demux, stream, filter and play pretty much anything that humans and machines have created. It supports the most obscure ancient formats up to the cutting edge, no matter if these formats were designed by some standards committee, the community or a corporation. FFmpeg compiles, runs, and passes our testing infrastructure FATE across Linux, macOS, Microsoft Windows, Android, the BSDs, Solaris, etc. under a wide variety of build environments, platforms and configurations. FFmpeg provides the libraries libavcodec, libavutil, libavformat, libavfilter, libavdevice, libswscale and libswresample to be used by applications as well as the command line tools ffmpeg, ffplay and ffprobe for direct use.
Who the users of FFmpeg are
The FFmpeg libraries are utilized by various applications and services affecting the daily multimedia experience of countless end-users. Among these are media players like VLC and MPlayer, browsers including Chromium and Firefox, social media services from Facebook and Twitter to YouTube and Vimeo. Also a large user base uses the provided command line tools to directly record, manipulate and play media in all the many ways FFmpeg has to offer. If digital multimedia is part of your daily life chances are high that you are already part of the huge group of people who benefit from the FFmpeg project.
How your contribution might fit in
As an interested student you will have the chance to dive into a highly technical environment and demonstrate the skills to develop software at a high level in terms of code quality, maintainability and security. Having a mentor on your side reduces the burden to get you on speed working in a yet unknown codebase and community. You will be able to improve your skills, gain a lot of experience in a very interesting field and possibly contribute your own piece of a software that might have an impact on millions of users."
FOSDEM,https://fosdem.org,"The organization that handles all aspects of the FOSDEM conference
FOSDEM is a two-day event organised by volunteers to promote the widespread use of free and open source software. Taking place in the beautiful city of Brussels (Belgium), FOSDEM is widely recognised as the best such conference in Europe. Participation and attendance is totally free.
FOSDEM is a free and non-commercial event organised by the community for the community. The goal is to provide free and open source software developers and communities a place to meet and:
get in touch with other developers and projects;
be informed about the latest developments in the free software world;
be informed about the latest developments in the open source world;
attend interesting talks and presentations on various topics by project leaders and committers;
promote the development and benefits of free software and open source solutions.
The FOSDEM team feels it is very important for free and open source software developers around the world to be able to meet in “real life”.
To this end, we have set up developer rooms (devrooms) with network/internet connectivity and projectors where teams can meet and showcase their projects. Devrooms are a place for teams to discuss, hack and publicly present latest directions, lightning talks, news and discussions. We believe developers can benefit a lot from these meetings."
FOSSASIA,https://fossasia.org,"Improving People's live with Open Tech
FOSSASIA develops Open Source software and hardware for conversational AIs, science and event management with a global developer community from its base in Asia and organizes Open Tech events. The mission of FOSSASIA is to improve people's lives by sharing open technologies, knowledge and resources and building a sustainable FOSS ecosystem. The organization supports its successful projects as an incubator and runs coding programs and development contests like Codeheat to grow the developer community. FOSSASIA's annual OpenTechSummit in Singapore is the premier Open Technology event in Asia for developers, tech companies, and contributors."
FOSSology Project,https://www.fossology.org/,"FOSSology is an open source license compliance software system and toolkit.
FOSSology is an industry standard tool for the end-to-end analysis of software components in a single web server application. It lets organizations scan source code for:
•License information, •Copyright notices, •Export control relevant information.
It makes software clearing teams more efficient by offering high precision with few false positives, greatly reducing overhead costs.
FOSSology let users auto-generate compliance documentation according to the organization's needs, in a variety of data formats (DOCX, SPDX, XML, debian-copyright, text files, etc.). It keeps confidential product development information within the organization.
FOSSology is an Open Source Software tool licensed under GPL-2.0 and a Linux Foundation collaboration project. Like any other OSS project FOSSology can be used free of charge (no license fees have to be paid).
As a long-running Open Source project, FOSSology can easily accommodate evolving user needs, and offers unrivalled opportunities for adaptation."
FrameNet Brasil at the Federal University of Juiz de Fora,http://www.ufjf.br/framenetbr-eng/,"Natural Language Understanding with structured computational semantics
FrameNet Brasil (FN-BR) is a Computational Linguistics lab of the Graduate Programs in Linguistics and Computer Sciences at the Federal University of Juiz de Fora, Brazil. It is also the Brazilian branch of the FrameNet initiative, a global effort to build language resources based on Frame Semantics and Construction Grammar started in 1997 by Charles Fillmore, in the International Computer Science Institute, in Berkeley California. FN-Br builds lexical and grammatical language resources and apply them to address issues in Natural Language Understanding. Frame Semantics takes a cognitive approach to study the meaning of words and expressions. Instead of using formal logics (a common view in computational semantics field), the meaning is structured considering how the language users understand and use the words in a given context. FrameNet is the computational implementation of this idea, building a lexical resource cognitively motivated.
The Database
FN-Br implements a relational database storing a set of frames - or scenes -, the elements structuring these frames, the language specific material (words, MWEs and grammatical constructions), and several typed relations between all those items. Such a database provides a model and a structure for semantic representation of the knowledge about a given language. Currently, FN-Br includes data about Brazilian Portuguese, English and Spanish.
The Applications
FN-Br database is the base for the development of different software: a frame-based annotation tool Webtool, a domain-specific dictionary - the FrameNet Brasil World Cup Dictionary; a system for recommending tourist attractions - m.knob; a semantically enhanced sentence translator and a constructional parser - CARMA."
Free and Open Source Silicon Foundation,https://www.fossi-foundation.org,"Working together to improve the Free and Open Source Silicon ecosystem
The Free and Open Source Silicon (FOSSi) Foundation is a not-for-profit organization with the support the growing community of open source silicon hardware. We do this with a variety of activities and through Google Summer of Code we bring together enthusiastic students and outstanding projects. Under our umbrella are open source silicon hardware projects, operating systems and compilers for such projects, tools for electronic design automation and the related ecosystem."
FreeBSD,https://www.FreeBSD.org/,"FreeBSD: The Foundation of the Internet
FreeBSD is an advanced operating system for modern server, desktop, and embedded computer platforms. FreeBSD provides advanced networking, impressive security features, and world class performance, and is used by some of the world's busiest web sites and most pervasive embedded networking and storage devices. From providing the foundation to the PlayStation 4 operating system, to Juniper's routers making up the backbone of the Internet, to being at the core of Apple's OSX and powering the servers Netflix use to stream terabits of video every second, chances are you are using FreeBSD right now without even realizing it.
The FreeBSD Project began 25 years ago in 1993, but is based on the work of Berkeley CSRG with a history going back to 1978. Over those years the code base has gone through continuous development, improvement, and optimization. The FreeBSD Project is a large, mature, and yet relatively tightly knit organization, developed and maintained by a large team of individuals.
There are currently over 300 developers with write access to the main revision control system, and hundreds more with access to our Subversion servers for experimental and third party development. This is also where our Summer of Code students have worked in previous years. We have an active mentoring program to bring all new developers into our community, not just those that we introduce to FreeBSD through the GSoC. There are hundreds of mailing lists, forums, blogs, IRC channels, and user groups all detailed on our main website. FreeBSD offers a complete operating system in which students can work, not just a kernel or specific userland stack. This allows for interesting work that spans the userland/kernel boundary.
In addition to producing an operating system, FreeBSD has incubated the development of key pieces of infrastructure which are used by other open source projects including bsnmp, jemalloc, libarchive, and OpenPAM."
FreeType,https://freetype.org,"FreeType font rendering library
FreeType font rendering library
FreeType is a freely available software library to render fonts.
It is written in C, designed to be small, efficient, highly customizable, and portable while capable of producing high-quality output (glyph images) of most vector and bitmap font formats.
Some products that use FreeType for rendering fonts on screen or on paper, either exclusively or partially:
GNU/Linux and other free Unix operating system derivates like FreeBSD or NetBSD;
iOS, Apple's mobile operating system for iPhones and iPads;
Android, Google's operating system for smartphones and tablet computers;
ChromeOS, Google's operating system for laptop computers;
ReactOS, a free open source operating system based on the best design principles found in the Windows NT architecture;
Ghostscript, a PostScript interpreter used in many printers.
Counting the above products only, you get more than a billion devices that contain FreeType."
freifunk,https://freifunk.net,"Freifunk is a non-commercial initiative for free and open wireless networks.
More and more people are single-handedly installing and maintaining free networks. Every user in the free wireless network provides his or her wireless LAN router for data transfer to other participants. In return, they can also transmit data, such as text, music and movies through a free internal network or use services setup by participants to chat, call or play online games. We use mesh networks.
Umbrella Organisation
We act as umbrella organisation for other wireless communities like Ninux, qaul.net, Guifi.net or WLAN Slovenija and communites developing software we extensivly use like OpenWRT, OLSR, BATMAN, libremesh or retroshare.
Local communities provide software adapted to their own needs on their websites. There are more and more free wireless groups that meet regularly access in villages and cities.
Hardware and Software
Most devices in our networks are routers for home use. They should run with OpenWRT. In our local communities there are a lot of different approaches for different routing protocols, monitoring systems and map solutions. OpenWRT as OS for routers and OLSR, BATMAN and Babel as routing daemons are only a few examples of software developed together with freifunk. You can find a great variety of topics where you can go on with wireless communities. We're looking for people working on new hardware drivers, improving routing protocols, developing network monitoring tools and user interface topics on the web interfaces, helping us with new features and tools to organize decentralized communities.
Common freifunk goals
Educating and creating awareness on the subject of communication and freedom of information
Reducing the digital divide
Unhindered distribution of knowledge and resources
Empowering people to build and operate their own networks
Promote and support existing and new social structures *As we are decentralized there are some challenges, e.g. to get and show information about communities, working together with all those communties."
"Genes, Genomes and Variation",http://www.ensembl.org,"Authoritative databases of genome sequences and their function
Ensembl was created alongside the publication of the first draft of the human genome in 2001 to distribute this goldmine of information to scientists across the world. It quickly became and remains one of the most important reference databases in genomics, following the rapid development of the field. Its initial mission included finding all of the genes in the human genome. A year later, the mouse genome was published and we developed tools to directly compare genomes across species. Over the following decade, sequencing capacity increased exponentially (faster that Moore's Law in fact) and large surveys started examining more species and more individuals within each species. Our mission therefore expanded to store these datasets and statistics efficiently. Finally, in recent years, sequencing has been used to study the biochemical activity of the DNA molecule within the different tissues of an individual, prompting us to extend yet again our remit.
At the same time, Ensembl is an evolving software development project. Over 15 years, we moved from a central relational MySQL database with a Perl API and static web pages, to an array of storage technologies with a RESTful interface and an interactive front-end. We have dedicated portals for the large clades on the tree of life (known as Ensembl Genomes). Our annotations are produced through centuries of CPU time, coordinated by our powerful eHive analysis workflow manager.
Today, we are a team of nearly 90 full time staff, housed at the European Bioinformatics Institute, and we collaborate with many external contributors around the world, in particular via our Github repositories where you can see us work day-to-day. We are at the intersection of two exciting and rapidly expanding fields, and there is no lack of interesting directions to push the project."
GENIVI Alliance,https://www.genivi.org,"Developing open software for IVI and the connected car.
GENIVI® is a nonprofit industry alliance committed to driving the broad adoption of open source, In-Vehicle Infotainment (IVI) software and providing open technology for the connected car.
GENIVI Alliance, the organization, responsible for introducing Linux and open source software into the in-vehicle, infotainment domain, has successfully delivered several assets through its vehicle domain interaction strategy and is evolving into an alliance integrating multiple, in-vehicle operating systems required for a fully integrated vehicle cockpit.
In recent years GENIVI has focused on the integration challenges in the vehicle and outside, which include in particular cross-domain challenges (safety critical vs. non-critical domains), which brings with it diverse operating systems (Linux, Android, AUTOSAR Adaptive(tm) platform, plus a small handful of remaining proprietary and real-time operating systems).
As the industry moves toward combining multiple vehicle cockpit domains (IVI, cluster, connected devices) into a single silicon solution, often with multiple operating systems, automakers are exploring the concept of a central compute platform, coined by some in the market as cockpit computing.
The alliance provides its members with a global networking community of over 100 companies, joining connected car stakeholders with world-class developers in a collaborative environment, resulting in free, open source middleware as well as open standards for interoperability in diverse systems.
Our work is informed by automotive trends and results in standard interfaces and software that shorten development cycles, speed time to market, and reduce costs for companies adopting and producing automotive solutions."
Gentoo Foundation,http://www.gentoo.org,"A flexible, source-based Linux distribution.
Every user has work they need to do. The goal of Gentoo is to design tools and systems that allow a user to do that work as pleasantly and efficiently as possible, as they see fit. Our tools should be a joy to use, and should help the user to appreciate the richness of the Linux and free software community, and the flexibility of free software. This is only possible when the tool is designed to reflect and transmit the will of the user, and leave the possibilities open as to the final form of the raw materials (the source code.) If the tool forces the user to do things a particular way, then the tool is working against, rather than for, the user. We have all experienced situations where tools seem to be imposing their respective wills on us. This is backwards, and contrary to the Gentoo philosophy.
Put another way, the Gentoo philosophy is to create better tools. When a tool is doing its job perfectly, you might not even be very aware of its presence, because it does not interfere and make its presence known, nor does it force you to interact with it when you don’t want it to. The tool serves the user rather than the user serving the tool.
The goal of Gentoo is to strive to create near-ideal tools. Tools that can accommodate the needs of many different users all with divergent goals. Don’t you love it when you find a tool that does exactly what you want to do? Doesn’t it feel great? Our mission is to give that sensation to as many people as possible."
Git,http://git-scm.com,"fast, scalable, distributed revision control system
Git is the most widely-used revision control system in Open Source. It is a distributed system with an emphasis on speed, data integrity, and support for distributed, non-linear workflows.
Many large and successful projects use Git, including the Linux Kernel, Perl, Eclipse, Gnome, KDE, Qt, Ruby on Rails, Android, PostgreSQL, Debian, and X.org.
This organization covers projects for Git itself. Other git-based software or services are not covered by this organization."
Global Alliance for Genomics and Health,https://www.ga4gh.org/,"We develop open standards and tools for genomics to benefit human health
The Global Alliance for Genomics and Health (GA4GH) was formed to help accelerate the potential of genomic medicine to advance human health. It brings together over 400 leading genome institutes and centers with IT industry leaders to create global standards and tools for the secure, privacy respecting and inter-operable sharing of Genomic data."
GNOME,https://www.gnome.org/,"The elegant and ethical desktop experience
The GNOME project builds the technologies, platform, middle-ware, applications and environment to create a free software solution for using your personal computer. As part of your GSoC internship, you will have an opportunity to attend GNOME's biggest annual conference in Thessaloniki, Greece, at the end of August.
The GNOME project is:
Independent
Our board is democratically elected, and technical decisions are made by the engineers doing the work. We are supported by many organisations; employees from over a hundred companies have contributed since the project began.
Free
We believe that software should be developed in the open. Our development infrastructure and communication channels are public, and our code can be freely downloaded, modified and shared with others. All our contributors have the same rights.
Connected
Our project is an important part of the Free Software ecosystem. We work with other free projects to create high-quality solutions that span the entire software stack.
People-focused
Our software is translated into many languages and comes with built in accessibility features. This means that it can be used by anyone, regardless of the language they speak or their physical abilities."
GNSS-SDR,https://gnss-sdr.org/,"An open source Global Navigation Satellite Systems software-defined receiver
GNSS-SDR is an open source Global Navigation Satellite Systems software receiver, written in C++, that is able to work either from raw signal samples stored in a file, or in real-time with a radio-frequency front-end as signal source, and performs all the signal processing until the observable computation and Position-Velocity-Time solution. Its modularity allows users to populate the framework with their own algorithms, allowing to put the focus on the signal processing implementation without worrying about how to embed that algorithm in a whole GNSS receiver. It also makes possible fair performance benchmarks using real GNSS signals, and its open source license allows free downloading, use and code inspection. The proposed software receiver targets multi-constellation/multi-frequency architectures, pursuing the goals of efficiency, modularity, interoperability, and flexibility demanded by user domains that require non-standard features, such as earth observers or geodesists, and allowing applications such as the observation of the ionosphere, GNSS reflectometry, signal quality monitoring, space weather, and high-accuracy positioning based on carrier-phase navigation techniques. In this project, we focus on signal processing, understood as the process between the ADC and the computation of code and phase observables, including the demodulation of the navigation message. We purposely omit data processing, understood as the computation of the navigation solution from the observables and the navigation message, since there are a number of well-established libraries and applications for that (also in the open source side, such as GPSTk or RTKLIB)."
GNU Compiler Collection,https://gcc.gnu.org/,"A set of compilers produced by the GNU project
The GNU Compiler Collection includes front ends for C, C++, Objective-C, Fortran, Ada, and Go, as well as libraries for these languages (libstdc++,...). GCC was originally written as the compiler for the GNU operating system. The GNU system was developed to be 100% free software, free in the sense that it respects the user's freedom.
We strive to provide regular, high quality releases, which we want to work well on a variety of native and cross targets (including GNU/Linux), and encourage everyone to contribute changes or help testing GCC. Our sources are readily and freely available via SVN and weekly snapshots."
GNU Mailman,http://list.org,"the GNU Mailing List Manager
GNU Mailman is mailing list management software. It allows you to create and manage electronic mail mailing lists. It provides a web front-end for easy administration, both for list owners and list members. It supports digests (RFC 934 and RFC 1153), archiving, spam protection, bounce detection, Usenet gateways, and many more features. Version 2.1 supports multilingual mailing lists.
The current stable releases include 2.1.x and 3.x. While 2.1 is now stable, the development focus is on 3.x series which is a complete redesign from architecture to Web UI.
GNU Mailman 3.x series splits the functionality of managing mailing lists into multiple components.
The Mailman Core is the core engine which processes emails and exposes a REST API for clients to control the Core itself.
Postorius is the official web management interface of Core, which is written in Django. It uses the Python library MailmanClient to talk to Mailman Core.
Hyperkitty is the official archiver with supercharged capabilities, which allows it to be used as a forum and send emails from the web ui."
GNU Octave,http://www.octave.org,"Free Your Numbers
GNU Octave is a high-level interpreted language, primarily intended for numerical computations. It provides capabilities for the numerical solution of linear and nonlinear problems and for performing other numerical experiments. It also provides extensive graphics capabilities for data visualization and manipulation. Octave is normally used through its interactive command line interface, but it can also be used to write non-interactive programs. The Octave language is quite similar to Matlab so that most programs are easily portable.
Octave is continually being upgraded. The current version 4.4 includes a graphical user interface, support for classdef object-oriented programming, and many new and improved functions. Student projects may also involve developing or upgrading Octave Forge packages, which can be loaded to provide additional specialized functions that supplement those provided in Core Octave."
GNU Radio,https://www.gnuradio.org/,"GNU Radio: The free & open software radio ecosystem.
What is GNU Radio? GNU Radio is a free & open-source software development toolkit that provides signal processing blocks to implement software radios. It can be used with readily-available low-cost external RF hardware to create software-defined radios, or without hardware in a simulation-like environment. It is widely used in research, industry, academia, government, and hobbyist environments to support both wireless communications research and real-world radio systems.
What is Software Radio? The Wikipedia page on Software Radio provides an excellent overview. In brief, a software radio is a radio system which performs the required signal processing in software instead of using dedicated integrated circuits in hardware. The benefit is that since software can be easily replaced in the radio system, the same hardware can be used to create many kinds of radios for many different communications standards; thus, one software radio can be used for a variety of applications!"
Godot Engine,https://godotengine.org,"Multi-platform fully-featured 2D and 3D game engine
2D and 3D cross-platform game engine
Godot Engine is a feature-packed, cross-platform game engine to create 2D and 3D games from a unified interface. It provides a comprehensive set of common tools, so that users can focus on making games without having to reinvent the wheel. Games can be exported in one click to a number of platforms, including the major desktop platforms (Linux, macOS, Windows) as well as mobile (Android, iOS) and web-based (HTML5) platforms.
Free, open source and community-driven
Godot is completely free and open source under the very permissive MIT license. No strings attached, no royalties, nothing. The users' games are theirs, down to the last line of engine code. Godot's development is fully independent and community-driven, empowering users to help shape their engine to match their expectations. It is supported by the Software Freedom Conservancy not-for-profit.
Major industry player
With its major 3.0 release in January 2018 and upcoming 3.1 release, Godot is establishing itself as a major player not only among free and open source engine, but also next to the proprietary engines which currently dominate the market (Unity3D, Unreal Engine, Game Maker, etc.).
Hundreds of game and engine developers from all over the world contribute to its success daily by extending the engine, fixing bugs, writing documentation, providing support on community channels and, last but not least, developing their own great games with Godot!"
gprMax,http://www.gprmax.com,"Simulating electromagnetic wave propagation for Ground Penetrating Radar
gprMax is open source software that simulates electromagnetic wave propagation. It uses Yee's algorithm to solve Maxwell’s equations in 3D using the Finite-Difference Time-Domain (FDTD) method.
It is designed for simulating Ground Penetrating Radar (GPR) and can also be used to model electromagnetic wave propagation in fields such as engineering, geophysics, archaeology, and medicine. There are a wide range of applications range from assessing infrastructure such as bridges and roads, locating buried utilities, mapping glaciers, finding anti-personnel landmines, and detecting tumours in the human body.
gprMax is command-line-driven software written in Python with performance-critical parts written in Cython. It does not currently feature a graphical user interface (GUI) which allows it to be very flexible and scriptable software that can run in high-performance computing (HPC) environments, i.e. on supercomputers.
gprMax can be run on either CPU or GPU. The CPU solver has been parallelised using OpenMP which enables it to run on multi-core CPUs. The GPU solver has been developed using the NVIDIA CUDA programming model. gprMax also features a Messaging Passing Interface (MPI) task farm, which can operate with CPU nodes or multiple GPUs."
Haiku,http://www.haiku-os.org,"Integrated operating system for personal computers
HAIKU is an open source operating system currently in development. Specifically targeting personal computing, Haiku is a fast, efficient, simple to use, easy to learn, and yet very powerful system for computer users of all levels. Additionally, Haiku offers something over other open source platforms which is quite unique: The project consists of a single team writing everything from the kernel, drivers, userland services, tool kit, and graphics stack to the included desktop applications and preflets. While numerous open source projects are utilized in Haiku, they are integrated seamlessly. This allows Haiku to achieve a level of consistency that provides many conveniences, and is truly enjoyable to use by both end-users and developers alike.
The key highlights that distinguish Haiku from other operating systems include:
Specific focus on personal computing
Custom kernel designed for responsiveness
Fully threaded design for great efficiency with multi-processor/core CPUs
Rich object-oriented API for faster development
Database-like file system (BFS) with support for indexed metadata
Unified, cohesive interface
The Be Operating System introduced progressive concepts and technologies that we believe represent the ideal means to simple and efficient personal computing. Haiku is the realization of those concepts and technologies in the form of an operating system that is open source and free.
Haiku is developed by a growing community of volunteer developers from all around the world. Additionally, Haiku also exists thanks to the dedicated support of a fervent and friendly community, and that of Haiku, Inc., a non-profit organization founded by former project leader Michael Phipps with the purpose of supporting the development of Haiku as well as the growth of both the community and the Haiku platform."
Haskell.Org,http://haskell.org,"Standardized, statically typed, lazy functional programming language
Haskell is an advanced, general-purpose, purely functional programming language. It has a strong, static type system with Hindley-Milner type inference.
The language natively supports lazy evaluation, and functions are generally not allowed to have side effects. This leads to a concise and declarative style of programming, which differs quite a bit from conventional languages. By not allowing side effects and dealing with immutable data, the compiler can avoid whole classes of bugs.
Haskell generally compiles to fast, native code, but it can also be compiled to other targets like JavaScript (through GHCJS) or LLVM.
In Google Summer of Code, we attempt to improve not only the language, but the whole ecosystem. This includes (aside from the language itself):
Compilers
Commonly used libraries
Commonly used applications written in Haskell
Profilers, debuggers and other tools
Package managers and infrastructure
We have compiled an ideas list together with long-time Haskell users, compiler contributors and researchers, and as such we believe these are important projects for the industry and academia both."
Hydra Ecosystem,https://www.hydraecosystem.org/,"Automate REST APIs. Next generation API clients.
Hydra is a documentation framework that bases on top of established Linked Data (Semantic Web) tools to build the next generation of connected Web APIs. The team of developers in the Hydra Ecosystem community aims to establish tools to make Hydra framework operational using Python. A list of tools under development can be found at this link.
Hydra is currently a draft created by World Wide Web Consortium’s Hydra Community Group. Official documentation available here and development is open here.
Hydra Ecosystem promotes and facilitates the adoption of Hydra."
INCF,https://www.incf.org/,"Advancing global collaborative brain research
The International Neuroinformatics Coordinating Facility (INCF; www.incf.org) is an international organization launched in 2005, following a proposal from the Global Science Forum of the OECD. INCF was established to facilitate and promote the sharing of data and computing resources in the international neuroscience community, and to advance training in the field. A larger objective of INCF is to advance data reuse and reproducibility in brain research, by coordinating the development of Open, FAIR, and Citable tools and resources for neuroscience.
The global INCF community provides coordination of global neuroscience infrastructure through the development and endorsement of consensus-based standards and best practices and trains scientists, administrators, and students in using neuroinformatics tools and methods. We are developing a training platform and building the community to support it and its student communities.
INCF activities are open to all who can contribute to neuroinformatics at the international level. We have a global community of neuroscience researchers working on new and improved tools for all of neuroscience – enabling other researchers to make more and faster discoveries, and improving our understanding of the brain."
Inkscape,http://www.inkscape.org/,"Inkscape is a professional vector graphics editor for Windows, Mac OS X & Linux.
Inkscape is an open-source vector graphics editor similar to Adobe Illustrator, Corel Draw, Freehand, or Xara X. What sets Inkscape apart is its use of Scalable Vector Graphics (SVG), an open XML-based W3C standard, as the native format."
Institut für Angewandte Informatik (InfAI) e.V.,https://infai.org,"Putting scientific research into practice.
The Institute for Applied Informatics (InfAI) e.V. was founded in 2006 to promote science and research in the areas of Computer Science and Information Systems. Since 2008 the institute has been a state-approved affiliated institute of Leipzig University. For Google Summer of Code it acts as an umbrella organization for the research group “Visual Software Analytics” which started Getaviz in 2018. Our research group consists of five permanent members, who will be mentors for GSoC. We deal with the question of how the software development process can be improved. Through visualizations we make the abstract problems of software development more understandable and accessible. In recent years, we have built up a great deal of knowledge in this field and published at international scientific conferences together with scientists from all over the world. Since last year, we have concentrated to put scientific findings into practice. Our innovative open source project Getaviz transfers the knowledge of the scientific community of software visualization into helpful tools for software developers. With the support of our growing community we are designing visualizations for exploring the structure, behavior, and evolution of software artifacts in 2D, 3D, virtual reality, and augmented reality. We provide a highly creative environment with many modern technologies on transition between science and industry."
Intel Media And Audio For Linux,https://01.org/linuxmedia,"Intel Media And Audio For Linux
Intel Media and Audio for Linux is a family of media software, including libVA, FFmpeg-vaapi, FFmpeg-qsv, gstreamer-vaapi, gstreamer-msdk, libyami, libxcam and SOF. libVA is an open source software library and API specification to provide access to hardware accelerated video decoding/encoding and video processing. FFmpeg-vaapi supplies hardware acceleration based on the low-level VAAPI interface that takes advantage of the industry standard VA API to execute high-performance video transcoding. FFmpeg-qsv supplies hardware acceleration based based on Intel Media SDK library. Gstreamer-vaapi is a GStreamer plugin that allows hardware accelerated video processing through libVA. Gstreamer-msdk is a Gstreamer plugin for the Intel® Media SDK to execute video hardware acceleration. libyami is an open source video codec library to accelerate video decoding/encoding based on libVA. libxcam is an open source camera library to support computational photography features like 3A and image processing. SOF is an open source community that provides an open source audio DSP firmware and SDK for audio or signal processing on modern DSPs. All of these projects increase the speed and performance of decoding and encoding compressed digital video, imaging and audio. They also support workload offloading of CPU.
These projects are provided for operating system vendors, systems integrators, and original device manufacturers who are creating branded or customized operating systems for embedded devices, phones, tablets, convertibles, desktops, gaming and entertainment systems and more. Independent software vendors that create applications and games can also take advantage of the freely available source code and binaries."
InterMine,http://intermine.org/,"Integrating biological data sources, making it easy to query and analyse data
What is InterMine?
InterMine integrates data from diverse biological sources, and provides a web-based user interface for querying and analysing the data. Users can automatically generate code to run queries using our client libraries in R, Python, Perl, Ruby, Java, and Javascript.
What technologies do we use?
The InterMine core is built in Java, and all data are stored in PostgreSQL. We have a legacy JSP-based user interface, with a Clojurescript user interface in early beta. We're also keen on browser-based datavis tools that use our API, so you'll see a lot of Javascript (or languages that compile to Javascript, like Clojurescript and Coffeescript). Our client libraries provide opportunities to write code in several other languages.
What sort of data does InterMine have?
Since InterMine is open source, many research organisations around the world run InterMines with their own organisms, ranging from mice and fruit flies to a broad range of plants. Visit the InterMine Registry to see them all. (The registry was a GSoC project!) Most InterMines also have a ""data sources"" tab which tells you more about where the data in that specific instance originates.
What kind of problems does InterMine solve?
Genomic data is often messy, and there is a lot of it. Scientists use different terms to mean the same thing, and even assign the same gene different names! We aim to help scientists make sense of such ambiguity, diversity and complexity.
One way to help is to provide visualisations, so we’re always excited to add and adapt different ways to display our data. How do you visualise the features inside a protein, or the interactions between two sets of genes?
Code you write for InterMine can have a large impact - since there are dozens of different InterMines, we aim to write code that can be easily deployed on any of them."
Internet Archive,https://archive.org,"Universal Access to All Knowledge
Help the Internet Archive further develop and improve the Wayback Machine and the Open Library.
Continue development of the Chrome extension “Wayback Machine”.
Continue development of the Google Assistant Action (Voice App) “Internet Archive”
Contribute to the development of the OpenLibrary.org
Improve the scope, efficiency, and effectiveness of the Wayback Machine’s web crawling and archiving operations
Contribute to the Archive.org component system"
Internet Systems Consortium,https://isc.org,"We support the infrastructure of the Internet with Open Source
Why Network Infrastructure?
Networking is complicated - you can't just do whatever you want, it requires adhering to agreed upon standards for interoperability and stability. The ISC team has helped write those standards, as well as implement them. The Internet infrastructure projects we work on present very interesting problems, including performance, interoperability, flexibility, resilience, security, and even user experience. Major carriers and service providers use our software - as do schools, airports, hospitals and small businesses. Working on core infrastructure gives you an opportunity to have a significant impact.
Our Team
BIND 9 and Kea are maintained by full-time senior engineers with a lot of experience in networking and software development. We have to have high standards: coding standards, code reviews, continuous integration testing, continuous fuzzing, continuous performance testing. ISC's engineers work from home, wherever they live, which is all around the world. We keep in touch with on-line chat mailing lists, and frequent video conference calls.
How You Could Contribute
BIND 9 and Kea are fairly large and complicated software projects, but both need more than we can provide: we need to improve our usability, we have lots of ideas for useful tools, we need better documentation, and we have many features we would love to add. If you look at our user mailing lists or our GitLab issue trackers, you will see we have an active and vocal user community. Besides contributing directly to the main BIND or Kea projects, there are many other possible projects - including dashboards for metrics and status, configuration tools and maintenance and testing utilities."
JabRef,http://www.jabref.org/,"The open-source reference manager
JabRef is one of the most widely-used citation and reference management tools. It helps students and researcher to stay on top of their literature by assisting at every step of a research project: collecting and organizing literature sources, discovering the latest research, citing references in LaTeX and other text editors, and sharing interesting papers with collaborators.
JabRef is open-source and cross-platform. It is written in Java using JavaFX as the user interface technology."
JBoss Community,http://www.jboss.org/,"Community of Java projects around JBoss Middleware
JBoss Community is a community of open source projects. The community hosts a large number of projects that are written in various programming languages. The primary language is Java. But there are also projects that are written in Ruby, PHP, Node and other languages.
Project categories range from better testing support over IDEs, application servers, application and performance monitoring to micro-services."
JdeRobot - Universidad Rey Juan Carlos,http://jderobot.org,"A software toolkit for developing applications in Robotics and Computer Vision
JdeRobot is an open source toolkit for Robotics and Computer Vision.
Robotics applications are typically distributed, made up of a collection of concurrent asynchronous components which communicate using some middleware (ROS messages, ICE, DDS...). Building robotics applications is a complex task. Integrating existing nodes or libraries, which provide already solved functionality, and using several tools may increase the software robustness and shorten the development time. JdeRobot provides several tools, libraries and reusable nodes. They have been written in C++, Python or JavaScript.
Main JdeRobot Features
ROS friendly (full compatible with ROS-Kinetic)
C++, Python, JavaScript
Open source
Easy installation from debian, PIP and npm packages
Our community mainly works on five development areas: 1.- Robot Programming Tools
VisualStates tool for robot programming with automata
WebSim robot simulator with web technologies
Scratch4Robots tool for visual robot programming
FPGA-robots: designing robot intelligence with reconfigurable hardware (FPGAs) using open tools like IceStudio.
2.- Education in Robotics and Computer Vision
UniBotics: a Robotics-Academy for engineering students. A ROS-based framework to learn robotics and computer vision with drones, autonomous cars.... It is a collection of Python programmed exercises.
KiBotics: a web based framework for teaching robotics to kids and preuniversity students.
3.- SLAM, visual localization
SD-SLAM: visual SLAM algorithm
slam-TestBed tool for evaluation of SLAM algorithms
4.- DeepLearning, visual perception
DetectionSuite tool for evaluation of detection networks
ObjectDetector node, see deep learning networks in action
neuralFPGA running deeplearning networks on FPGAs
5.- Drones, autonomous behaviors
We are registered as non-profit organization in Spain Ref.#615800."
Jenkins project,http://jenkins.io,"Open-source automation server for building great things at any scale
Jenkins, originally founded in 2006 as ""Hudson"", is one of the leading automation servers. Jenkins' motto is ""Build great things at any scale"". Using an extensible, plugin-based architecture developers have created hundreds of plugins to adapt Jenkins to a multitude of build, test, and deployment automation workloads. Jenkins core is open-source (MIT License)
The project has about 400 active contributors working on Jenkins core, plugins, website, project infrastructure, localization activities, etc. In total we have more than 2000 components including plugins, libraries, and various utilities. The main languages in the project are Java, Groovy and JavaScript, but we also have components written in other languages (Go, C/C++, C#, etc.). Jenkins project also includes multiple sub-projects (including Jenkins X, Configuration-as-Code and Remoting) and special interest groups. These projects and SIGs participate in GSoC as a part of the Jenkins project.
This year we invite students to join the Jenkins community and to work together on Jenkins plugins in order to improve Jenkins user experience and reliability."
Joomla,https://www.joomla.org/,"Joomla, the flexible platform empowering website creators.
The Joomla CMS is a PHP based application that powers about 3.2% of the web, 7% of all CMS based websites, as well as many intranets.
The Joomla project has hundreds of contributors, organized in a set of working groups and teams, and a leadership group. These are coordinated by the Department.
The Joomla CMS is a community driven FOSS projects developed and maintained by an international community encompassing over 150 countries. Joomla is used by millions of websites and web applications ranging from the hobbyist, professional web developer, to large enterprises, for both the World Wide Web and intranets.
The Joomla Project is a community effort which strives to engage contributors from diverse backgrounds and varying interests and skills in building and supporting great software together. The mission, vision and values of the Joomla Project reflect this.
The official umbrella organisation is Open Source Matters (OSM), the not for profit organization that manages financial and legal issues for the Joomla Project. A team of experienced people drawn from many areas of the project will manage the 2019 GSoC project for Joomla"
JSK Robotics Laboratory / The University of Tokyo,http://www.jsk.t.u-tokyo.ac.jp/,"JSK is focusing on the fundamental functions & systems for intelligent robots
Research in this laboratory is focusing on the fundamental functions and systems necessary for future intelligent robots that will live and work in the daily life field and human society. The members are challenging something new through their own integrated robot systems and learning how to build sustainable systems for the future with each other.
Daily life support humanoid platform : recognition of situations in human life environments, using tools, dishes, tablewares, and appliances, learning from humans, conversation with humans, etc.
Musculoskeletal tendon-driven humanoid : humanlike musculoskeletal body with very many joints and numerous redundant sensors aiming at powerful and supple motions like human, design principle of humanoid body structure, autonomous development of complex sensory-motor system, etc.
Embedded robotics devices: soft flesh or deformable tactile sensor devices, integrated IMU sensors, perception devices, embedded CPU for flying robots, onbody communication LAN system, power system for intelligent robots. etc.
Dynamics whole body control humanoid : integrating high-torque, high-speed motor drive circuit, high-speed 3D recognition system, dynamics whole-body.
IRT (Information and Robot Technology) to support human and aging society: through fusing IT and RT systems, personal mobility robots, affectionate watching appliance are conducted for supporting the future life society
Robot Open Software System : design and development of open-source type intelligent robot for mobile manipulation robot."
Kapitan,https://github.com/deepmind/kapitan,"Generic templated configuration management for kubernetes and more
Kapitan is a tool to manage complex devops deployments using jsonnet, jinja2 or pure python. Use Kapitan to manage your Kubernetes manifests, your documentation, your Terraform configuration or even simplify your scripts for multiple environments. Kapitan introduces the notion of an inventory which contains all your (environment or code) variables. Based on those variables you can then build your infrastructure conditionally to fit every kind of environment or code you want to deploy. If you like tinkering with your linux shell configurations or use ansible, puppet or chef to manage deployments you will enjoy the power of Kapitan."
KDE Community,https://www.kde.org/,"Experience Freedom!
KDE is an international team co-operating on development and distribution of Free, Open Source Software for desktop and portable computing. Our community has developed a wide variety of applications for communication, work, education and entertainment. We have a strong focus on finding innovative solutions to old and new problems, creating a vibrant, open atmosphere for experimentation."
Kiwix,https://www.kiwix.org,"Internet content for people without internet access
Kiwix is a simple application that provides internet content to people without internet access – imagine a digital offline library. Kiwix reads website copies (stored as .zim files) from a local library and displays them as the original websites would appear online. Our library currently offers more than a thousand websites, from Wikipedia to the Gutenberg library to TED talks and much more.
Kiwix runs on Android, iOS, macOS, Windows, Linux and even Raspberry (as a hotspot) and is available in more than 100 languages. It currently has upwards of 3 million users around the world, and we're aiming at 100 millions within five years: there's still 4 billion people without reliable internet access, and even in those countries that are supposedly connected, there's always a matter of cost or censorship."
KNIME,https://knime.com,"Open for Innovation
At KNIME®, we build software for fast, easy and intuitive access to advanced data science, helping organizations drive innovation.
Our KNIME Analytics Platform is the leading open solution for data-driven innovation, designed for discovering the potential hidden in data, mining for fresh insights, or predicting new futures. Organizations can take their collaboration, productivity and performance to the next level with a robust range of commercial extensions to our open source platform.
For over a decade, a thriving community of data scientists in over 60 countries has been working with our platform on every kind of data: from numbers to images, molecules to humans, signals to complex networks, and simple statistics to big data analytics."
Kodi Foundation,http://www.kodi.tv,"The ultimate entertainment center
Kodi is a free and open source (GPL) software media player and entertainment hub for digital media. Kodi is available for Linux, OSX, iOS, Android, and Windows, running on both x86 and ARM-based processors, including the Raspberry Pi. Created in 2003 by a group of like minded programmers, Kodi is a non-profit project run and developed by volunteers located around the world. More than 50 software developers have contributed to Kodi, and 100-plus translators have worked to expand its reach, making it available in more than 30 languages."
LabLua,http://www.lua.inf.puc-rio.br/,"Programming Languages Research with emphasis on the Lua language
LabLua is a research lab at the Catholic University of Rio de Janeiro (PUC-Rio), affiliated with its Computer Science Department. It is dedicated to research on programming languages, with emphasis on the Lua language and reactive programming. It was founded on May 2004 by Prof. Roberto Ierusalimschy, the chief architect of the Lua language.
LabLua consists of people from a wide range of backgrounds, including PhD candidates, professors and alumni who are the developers and maintainers of projects that are used by the Lua and Céu communities at large.
What is Lua?
Lua is a powerful, efficient, lightweight, embeddable scripting language. It supports procedural programming, object-oriented programming, functional programming, data-driven programming, and data description.
Lua has been used in many industrial applications (e.g., Adobe's Photoshop Lightroom), with an emphasis on embedded systems (e.g., the Ginga middleware for digital TV in Brazil) and games (e.g., World of Warcraft and Angry Birds). Several versions of Lua have been released and used in real applications since its creation in 1993.
What is Céu?
Céu provides ""Structured Synchronous Reactive Programming"", a safe and deterministic concurrency model with side effects. Reactive applications interact continuously with the environment and are mostly guided through input events from it. Céu can be described as a reactive, imperative, concurrent, synchronous, and deterministic language, which easily integrates with C and Lua."
Libre Space Foundation,https://libre.space,"Open-source software and hardware technologies for space
[Libre Space Foundation] is working on several free software, open hardware and open data projects directly and indirectly related to space applications and technologies while producing open-data and know how for all.
One of the most active Libre Space projects is SatNOGS, the open global satellite ground-station network. It is designed as an open source participatory project based on the users operating a ground station that is accessed via a web page for all of the network users. A basic ground station can be made up of commercial off the shelf components that are commonly available with a static omnidirectional antenna, to more complex stations with multiple movable antennas. To facilitate the later we provide open hardware for those that want to build their own. As of the time of writing 100+ stations are on-line in the SatNOGS Network and 50+ are tested globally by University cubesat teams, companies, and individual contributors. Data from the Network are stored in the SatNOGS DataBase and are visualized in the SatNOGS Dashboard.
Libre Space together with the University of Patras are also the makers of UPSat, the 1st free software, open-hardware cubesat.
Libre Space Foundation is also implementing the European Space Agency activity SDR Maker Space working on several open-source Software Defined Radio sub-activities, to facilitate satellite communications."
